{"ast":null,"code":"var _jsxFileName = \"/Users/noavikman/tic-tac-toe/my-app/src/components/board.js\";\nimport React, { useState } from 'react';\nimport '../index.css';\nimport { Square } from './square';\nimport { SelectionSquare } from './selectionsquare';\nimport { calculateWinner, calculateMove } from './functions';\nimport { StartSquare } from './startsquare';\nexport function Board(props) {\n  const [gameReady, setGameReady] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [xEmoji, setXEmoji] = useState(\"\");\n  const [oEmoji, setOEmoji] = useState(\"\");\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winner, setWinner] = useState(null);\n  const [xTurn, setXTurn] = useState(true);\n\n  function handleClick(i) {\n    if (!squares[i] && !winner && xTurn) {\n      const sq = squares.slice();\n      sq[i] = xEmoji;\n      setSquares(sq);\n      setWinner(calculateWinner(sq));\n      const sqtemp = sq.slice();\n      setXTurn(false);\n\n      if (!calculateWinner(sq)) {\n        const computerMove = calculateMove(sqtemp, oEmoji, xEmoji);\n        sqtemp[computerMove] = oEmoji;\n      }\n\n      setTimeout(() => {\n        setWinner(calculateWinner(sqtemp));\n        setSquares(sqtemp);\n        setXTurn(true);\n      }, 1000);\n    }\n  }\n\n  function selClick(i, n) {\n    if (n === 1 && !(oEmoji === i)) {\n      setXEmoji(i);\n      setGameReady(Boolean(i && oEmoji));\n    }\n\n    if (n === 2 && !(xEmoji === i)) {\n      setOEmoji(i);\n      setGameReady(Boolean(i && xEmoji));\n    }\n  }\n\n  function startClick() {\n    if (!gameStarted) {\n      setGameStarted(true);\n    } else {\n      setGameStarted(false);\n      setSquares(Array(9).fill(null));\n      setWinner(null);\n    }\n  }\n\n  function renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: squares[i],\n      onClick: () => handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }\n\n  function renderSelSquare(i, n) {\n    return /*#__PURE__*/React.createElement(SelectionSquare, {\n      value: i,\n      onClick: () => selClick(i, n),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    });\n  }\n\n  function renderStartSquare() {\n    var message = gameStarted ? \"Play again?\" : \"Start Game!\";\n    return /*#__PURE__*/React.createElement(StartSquare, {\n      value: message,\n      onClick: () => startClick(),\n      style: {\n        width: \"1000px\",\n        fontSize: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!gameStarted) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Emoji Selection\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      style: {\n        marginBottom: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, renderSelSquare('ðŸ˜€', 1), renderSelSquare('ðŸ˜ˆ', 1), renderSelSquare('ðŸ’©', 1), renderSelSquare('ðŸ˜€', 2), renderSelSquare('ðŸ˜ˆ', 2), renderSelSquare('ðŸ’©', 2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Human \", xEmoji.toString()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Computer \", oEmoji.toString()), gameReady && renderStartSquare());\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      style: {\n        marginBottom: \"30px\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, 'TIC TAC TOE'), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      style: {\n        marginBottom: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, renderSquare(6), renderSquare(7), renderSquare(8)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, Boolean(winner) && winner !== \"draw\" && \"The winner is \" + winner, Boolean(winner) && winner === \"draw\" && \"It is a \" + winner), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, Boolean(winner) && renderStartSquare()));\n  }\n}\nexport default Board(props);","map":{"version":3,"sources":["/Users/noavikman/tic-tac-toe/my-app/src/components/board.js"],"names":["React","useState","Square","SelectionSquare","calculateWinner","calculateMove","StartSquare","Board","props","gameReady","setGameReady","gameStarted","setGameStarted","xEmoji","setXEmoji","oEmoji","setOEmoji","squares","setSquares","Array","fill","winner","setWinner","xTurn","setXTurn","handleClick","i","sq","slice","sqtemp","computerMove","setTimeout","selClick","n","Boolean","startClick","renderSquare","renderSelSquare","renderStartSquare","message","width","fontSize","marginBottom","toString","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../index.css';\nimport { Square } from './square'\nimport { SelectionSquare } from './selectionsquare'\nimport { calculateWinner, calculateMove } from './functions'\nimport { StartSquare } from './startsquare'\n\nexport function Board(props) {\n  const [gameReady, setGameReady] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [xEmoji, setXEmoji] = useState(\"\");\n  const [oEmoji, setOEmoji] = useState(\"\");\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winner, setWinner] = useState(null);\n  const [xTurn, setXTurn] = useState(true);\n\n  function handleClick(i) {\n    if (!squares[i] && !winner && xTurn) {\n      const sq = squares.slice();\n      sq[i] = xEmoji;\n      setSquares(sq);\n      setWinner(calculateWinner(sq))\n      const sqtemp = sq.slice()\n      setXTurn(false)\n      if (!calculateWinner(sq)) {\n          const computerMove = calculateMove(sqtemp, oEmoji, xEmoji);\n          sqtemp[computerMove] = oEmoji;\n        }\n      setTimeout(() => {\n        setWinner(calculateWinner(sqtemp));\n        setSquares(sqtemp);\n        setXTurn(true);\n      }, 1000);\n    }\n  }\n\n  function selClick(i, n) {\n    if (n === 1 && !(oEmoji === i)) {\n      setXEmoji(i);\n      setGameReady(Boolean(i && oEmoji))\n    }\n    if (n === 2 && !(xEmoji === i)) {\n      setOEmoji(i)\n      setGameReady(Boolean(i && xEmoji))\n    }\n  }\n\n  function startClick() {\n    if(!gameStarted){\n      setGameStarted(true)\n    } else {\n      setGameStarted(false)\n      setSquares(Array(9).fill(null))\n      setWinner(null)\n    }\n  }\n\n  function renderSquare(i) {\n    return <Square value={squares[i]}\n      onClick={() => handleClick(i)} />;\n  }\n\n  function renderSelSquare(i, n) {\n    return <SelectionSquare value={i}\n      onClick={() => selClick(i, n)} />;\n  }\n\n  function renderStartSquare() {\n    var message = gameStarted? \"Play again?\" : \"Start Game!\"\n    return <StartSquare value={message}\n      onClick={() => startClick()} style={{ width: \"1000px\", fontSize: \"10px\" }} />\n  }\n\n  if (!gameStarted) {\n    return (\n      <div className=\"main\">\n        <div style={{marginBottom:\"30px\"}}>\n          Emoji Selection\n        </div>\n        <div className=\"board-row\" style={{marginBottom:\"30px\"}}>\n          {renderSelSquare('ðŸ˜€', 1)}\n          {renderSelSquare('ðŸ˜ˆ', 1)}\n          {renderSelSquare('ðŸ’©', 1)}\n          {renderSelSquare('ðŸ˜€', 2)}\n          {renderSelSquare('ðŸ˜ˆ', 2)}\n          {renderSelSquare('ðŸ’©', 2)}\n        </div>\n        <div style={{marginBottom:\"30px\"}}>\n          Human {xEmoji.toString()}\n        </div>\n        <div>\n          Computer {oEmoji.toString()}\n        </div>\n        {gameReady && renderStartSquare()}\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"main2\">\n        <div className=\"status\" style={{marginBottom:\"30px\", textAlign:\"center\"}}>{'TIC TAC TOE'}</div>\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\" style={{marginBottom:\"30px\"}}>\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n        <div style= {{textAlign:\"center\"}}>\n          {Boolean(winner) && winner!==\"draw\" && \"The winner is \"+winner}\n          {Boolean(winner) && winner===\"draw\" && \"It is a \"+winner}\n        </div>\n        <div> \n          {Boolean(winner) && renderStartSquare()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board(props);"]},"metadata":{},"sourceType":"module"}