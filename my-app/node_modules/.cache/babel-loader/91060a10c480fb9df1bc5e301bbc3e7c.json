{"ast":null,"code":"export function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\nexport function calculateMove(squares, computer, human) {\n  const emojis = [computer, human];\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < lines.length; i++) {\n      const lines = lines[j];\n      if (line[0] === emojis[i] && line[1] === line[0] && !line[2]) return line[2];\n      if (line[1] === emojis[i] && line[2] === line[1] && !line[0]) return line[0];\n      if (line[2] === emojis[i] && line[0] === line[2] && !line[1]) return line[1];\n    }\n  }\n}","map":{"version":3,"sources":["/Users/noavikman/tic-tac-toe/my-app/src/components/functions.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","calculateMove","computer","human","emojis","j","line"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACrC,QAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACxE,aAAON,OAAO,CAACI,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED,OAAO,SAASG,aAAT,CAAuBP,OAAvB,EAAgCQ,QAAhC,EAA0CC,KAA1C,EAAiD;AACtD,QAAMC,MAAM,GAAG,CAACF,QAAD,EAAWC,KAAX,CAAf;AACA,QAAMR,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,CAAlB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB,SAAK,IAAIS,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACV,KAAK,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,YAAMD,KAAK,GAAGA,KAAK,CAACU,CAAD,CAAnB;AACA,UAAGC,IAAI,CAAC,CAAD,CAAJ,KAAYF,MAAM,CAACR,CAAD,CAAlB,IAAyBU,IAAI,CAAC,CAAD,CAAJ,KAAUA,IAAI,CAAC,CAAD,CAAvC,IAA8C,CAACA,IAAI,CAAC,CAAD,CAAtD,EAA2D,OAAOA,IAAI,CAAC,CAAD,CAAX;AAC3D,UAAGA,IAAI,CAAC,CAAD,CAAJ,KAAYF,MAAM,CAACR,CAAD,CAAlB,IAAyBU,IAAI,CAAC,CAAD,CAAJ,KAAUA,IAAI,CAAC,CAAD,CAAvC,IAA8C,CAACA,IAAI,CAAC,CAAD,CAAtD,EAA2D,OAAOA,IAAI,CAAC,CAAD,CAAX;AAC3D,UAAGA,IAAI,CAAC,CAAD,CAAJ,KAAYF,MAAM,CAACR,CAAD,CAAlB,IAAyBU,IAAI,CAAC,CAAD,CAAJ,KAAUA,IAAI,CAAC,CAAD,CAAvC,IAA8C,CAACA,IAAI,CAAC,CAAD,CAAtD,EAA2D,OAAOA,IAAI,CAAC,CAAD,CAAX;AAC5D;AACF;AACF","sourcesContent":["export function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  export function calculateMove(squares, computer, human) {\n    const emojis = [computer, human]\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i<2; i++) {\n      for (let j=0; j<lines.length; i++) {\n        const lines = lines[j]\n        if(line[0] === emojis[i] && line[1]===line[0] && !line[2]) return line[2]\n        if(line[1] === emojis[i] && line[2]===line[1] && !line[0]) return line[0]\n        if(line[2] === emojis[i] && line[0]===line[2] && !line[1]) return line[1]\n      }\n    }\n  }"]},"metadata":{},"sourceType":"module"}