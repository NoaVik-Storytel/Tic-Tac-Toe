{"ast":null,"code":"import _slicedToArray from\"/Users/noavikman/tic-tac-toe/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";export function calculateWinner(squares){var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),a=_lines$i[0],b=_lines$i[1],c=_lines$i[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}if(!squares.includes(null))return\"draw\";return null;}export function calculateMove(squares,computer,human){var emojis=[computer,human];var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<2;i++){for(var j=0;j<lines.length;j++){var line=lines[j];if(squares[line[0]]===emojis[i]&&squares[line[1]]===squares[line[0]]&&!squares[line[2]])return line[2];if(squares[line[1]]===emojis[i]&&squares[line[2]]===squares[line[1]]&&!squares[line[0]])return line[0];if(squares[line[2]]===emojis[i]&&squares[line[0]]===squares[line[2]]&&!squares[line[1]])return line[1];}}var order=[4,0,2,6,8,1,3,5];for(var _i=0;_i<squares.length;_i++){if(!squares[order[_i]])return order[_i];}return\"\";}","map":{"version":3,"sources":["/Users/noavikman/tic-tac-toe/my-app/src/components/functions.jsx"],"names":["calculateWinner","squares","lines","i","length","a","b","c","includes","calculateMove","computer","human","emojis","j","line","order"],"mappings":"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","sourcesContent":["export function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    if (!(squares.includes(null))) return \"draw\"\n    return null;\n  }\n\nexport function calculateMove(squares, computer, human) {\n  const emojis = [computer, human]\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < lines.length; j++) {\n      const line = lines[j]\n      if (squares[line[0]] === emojis[i] && squares[line[1]] === squares[line[0]] && !squares[line[2]]) return line[2]\n      if (squares[line[1]] === emojis[i] && squares[line[2]] === squares[line[1]] && !squares[line[0]]) return line[0]\n      if (squares[line[2]] === emojis[i] && squares[line[0]] === squares[line[2]] && !squares[line[1]]) return line[1]\n    }\n  }\n  const order = [4,0,2,6,8,1,3,5]\n  for (let i = 0; i < squares.length; i++) {\n    if (!squares[order[i]]) return order[i]\n  }\n  return \"\"\n}"]},"metadata":{},"sourceType":"module"}