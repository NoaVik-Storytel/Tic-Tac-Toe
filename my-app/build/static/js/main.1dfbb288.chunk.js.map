{"version":3,"sources":["serviceWorker.js","components/square.jsx","components/selectionsquare.jsx","components/functions.jsx","components/startsquare.jsx","components/board.jsx","components/game.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Square","props","className","onClick","value","SelectionSquare","calculateWinner","squares","lines","i","length","a","b","c","includes","StartSquare","Board","useState","gameReady","setGameReady","gameStarted","setGameStarted","xEmoji","setXEmoji","oEmoji","setOEmoji","Array","fill","setSquares","winner","setWinner","xTurn","setXTurn","renderSquare","sq","slice","sqtemp","computerMove","computer","human","emojis","j","line","order","calculateMove","setTimeout","handleClick","renderSelSquare","n","selClick","renderStartSquare","message","style","width","fontSize","marginBottom","textAlign","toString","Game","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1dfbb288.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport '../index.css';\n\nexport function Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }","import React from 'react';\nimport '../index.css';\n\nexport function SelectionSquare(props) {\n    return (\n      <button className=\"selsquare\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }","export function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    if (!(squares.includes(null))) return \"draw\"\n    return null;\n  }\n\nexport function calculateMove(squares, computer, human) {\n  const emojis = [computer, human]\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < lines.length; j++) {\n      const line = lines[j]\n      if (squares[line[0]] === emojis[i] && squares[line[1]] === squares[line[0]] && !squares[line[2]]) return line[2]\n      if (squares[line[1]] === emojis[i] && squares[line[2]] === squares[line[1]] && !squares[line[0]]) return line[0]\n      if (squares[line[2]] === emojis[i] && squares[line[0]] === squares[line[2]] && !squares[line[1]]) return line[1]\n    }\n  }\n  const order = [4,0,2,6,8,1,3,5]\n  for (let i = 0; i < squares.length; i++) {\n    if (!squares[order[i]]) return order[i]\n  }\n  return \"\"\n}","import React from 'react';\nimport '../index.css';\n\nexport function StartSquare(props) {\n    return (\n      <button className=\"startSquare\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }","import React, { useState } from 'react';\nimport '../index.css';\nimport { Square } from './square';\nimport { SelectionSquare } from './selectionsquare';\nimport { calculateWinner, calculateMove } from './functions';\nimport { StartSquare } from './startsquare.jsx';\n\nexport function Board(props) {\n  const [gameReady, setGameReady] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [xEmoji, setXEmoji] = useState('');\n  const [oEmoji, setOEmoji] = useState('');\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winner, setWinner] = useState(null);\n  const [xTurn, setXTurn] = useState(true);\n\n  function handleClick(i) {\n    if (!squares[i] && !winner && xTurn) {\n      const sq = squares.slice();\n      sq[i] = xEmoji;\n      setSquares(sq);\n      setWinner(calculateWinner(sq));\n      const sqtemp = sq.slice();\n      setXTurn(false);\n      if (!calculateWinner(sq)) {\n        const computerMove = calculateMove(sqtemp, oEmoji, xEmoji);\n        sqtemp[computerMove] = oEmoji;\n      }\n      setTimeout(() => {\n        setWinner(calculateWinner(sqtemp));\n        setSquares(sqtemp);\n        setXTurn(true);\n      }, 1000);\n    }\n  }\n\n  function selClick(i, n) {\n    if (n === 1 && !(oEmoji === i)) {\n      setXEmoji(i);\n      setGameReady(Boolean(i && oEmoji));\n    }\n    if (n === 2 && !(xEmoji === i)) {\n      setOEmoji(i);\n      setGameReady(Boolean(i && xEmoji));\n    }\n  }\n\n  function startClick() {\n    if (!gameStarted) {\n      setGameStarted(true);\n    } else {\n      setGameStarted(false);\n      setSquares(Array(9).fill(null));\n      setWinner(null);\n    }\n  }\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => handleClick(i)}\n      />\n    );\n  }\n\n  function renderSelSquare(i, n) {\n    return (\n      <SelectionSquare\n        value={i}\n        onClick={() => selClick(i, n)}\n      />\n    );\n  }\n\n  function renderStartSquare() {\n    const message = gameStarted ? 'Play again?' : 'Start Game!';\n    return (\n      <StartSquare\n        value={message}\n        onClick={() => startClick()}\n        style={{ width: '1000px', fontSize: '10px' }}\n      />\n    );\n  }\n\n  if (!gameStarted) {\n    return (\n      <div className=\"main\">\n        <div style={{ marginBottom: '30px' }}>\n          Emoji Selection\n        </div>\n        <div className=\"board-row\" style={{ marginBottom: '30px' }}>\n          {renderSelSquare('😀', 1)}\n          {renderSelSquare('😈', 1)}\n          {renderSelSquare('💩', 1)}\n          {renderSelSquare('😀', 2)}\n          {renderSelSquare('😈', 2)}\n          {renderSelSquare('💩', 2)}\n        </div>\n        <div style={{ marginBottom: '30px' }}>\n          Human\n          {' '}\n          {xEmoji.toString()}\n        </div>\n        <div>\n          Computer\n          {' '}\n          {oEmoji.toString()}\n        </div>\n        {gameReady && renderStartSquare()}\n      </div>\n    );\n  }\n  return (\n    <div className=\"main2\">\n      <div className=\"status\" style={{ marginBottom: '30px', textAlign: 'center' }}>TIC TAC TOE</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\" style={{ marginBottom: '30px' }}>\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div style={{ textAlign: 'center' }}>\n        {Boolean(winner) && winner !== 'draw' && `The winner is ${winner}`}\n        {Boolean(winner) && winner === 'draw' && `It is a ${winner}`}\n      </div>\n      <div>\n        {Boolean(winner) && renderStartSquare()}\n      </div>\n    </div>\n  );\n}\n\nexport default Board();\n","import React from 'react';\nimport '../index.css';\nimport {Board} from './board'\n\n\nexport function Game (props) {\n    return(\n    <div className=\"game\">\n        <div className=\"game-board\">\n        <Board />  \n        </div>  \n    </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Game } from './components/game';\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}